{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcurry/Desktop/WebDev1/Final_Project_May1/TriviaParty/Frontend/src/pages/StatsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockStats = {\n  userId: \"u123\",\n  name: \"TriviaFan\",\n  totalGames: 12,\n  totalQuestions: 120,\n  totalCorrect: 93,\n  categoryStats: {\n    General: {\n      correct: 35,\n      total: 40\n    },\n    History: {\n      correct: 20,\n      total: 30\n    },\n    Science: {\n      correct: 18,\n      total: 25\n    },\n    \"Pop Culture\": {\n      correct: 20,\n      total: 25\n    }\n  }\n};\nconst StatsPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [stats, setStats] = useState(null);\n  useEffect(() => {\n    setStats(mockStats);\n  }, [userId]);\n  if (!stats) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"p-6\",\n    children: \"Loading user stats...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this);\n  const averageCorrectPercent = Math.round(stats.totalCorrect / stats.totalQuestions * 100);\n  const bestCategory = Object.entries(stats.categoryStats).map(([category, data]) => ({\n    category,\n    percent: data.correct / data.total * 100\n  })).sort((a, b) => b.percent - a.percent)[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: [\"\\uD83D\\uDCCA Stats for \", stats.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6 text-lg space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Games Played:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \" \", stats.totalGames]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Average Accuracy:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" \", averageCorrectPercent, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Best Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" \", bestCategory.category, \" (\", bestCategory.percent.toFixed(1), \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"mt-8 px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\",\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(StatsPage, \"Hy80BXsy7IRyLMXiY6Gnotep2m0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StatsPage;\nexport default StatsPage;\nvar _c;\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","mockStats","userId","name","totalGames","totalQuestions","totalCorrect","categoryStats","General","correct","total","History","Science","StatsPage","_s","navigate","stats","setStats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","averageCorrectPercent","Math","round","bestCategory","Object","entries","map","category","data","percent","sort","a","b","toFixed","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelcurry/Desktop/WebDev1/Final_Project_May1/TriviaParty/Frontend/src/pages/StatsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst mockStats = {\n  userId: \"u123\",\n  name: \"TriviaFan\",\n  totalGames: 12,\n  totalQuestions: 120,\n  totalCorrect: 93,\n  categoryStats: {\n    General: { correct: 35, total: 40 },\n    History: { correct: 20, total: 30 },\n    Science: { correct: 18, total: 25 },\n    \"Pop Culture\": { correct: 20, total: 25 }\n  }\n};\n\nconst StatsPage = () => {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [stats, setStats] = useState(null);\n\n  useEffect(() => {\n    setStats(mockStats);\n  }, [userId]);\n\n  if (!stats) return <p className=\"p-6\">Loading user stats...</p>;\n\n  const averageCorrectPercent = Math.round(\n    (stats.totalCorrect / stats.totalQuestions) * 100\n  );\n\n  const bestCategory = Object.entries(stats.categoryStats)\n    .map(([category, data]) => ({\n      category,\n      percent: (data.correct / data.total) * 100\n    }))\n    .sort((a, b) => b.percent - a.percent)[0];\n\n  return (\n    <div className=\"p-8 max-w-xl mx-auto\">\n      <h1 className=\"text-3xl font-bold text-center mb-6\">\n        ðŸ“Š Stats for {stats.name}\n      </h1>\n\n      <div className=\"bg-white rounded-lg shadow p-6 text-lg space-y-4\">\n        <p>\n          <strong>Total Games Played:</strong> {stats.totalGames}\n        </p>\n        <p>\n          <strong>Average Accuracy:</strong> {averageCorrectPercent}%\n        </p>\n        <p>\n          <strong>Best Category:</strong> {bestCategory.category} ({bestCategory.percent.toFixed(1)}%)\n        </p>\n      </div>\n\n      <button\n        onClick={() => navigate('/')}\n        className=\"mt-8 px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\n      >\n        Back to Home\n      </button>\n    </div>\n  );\n};\n\nexport default StatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}