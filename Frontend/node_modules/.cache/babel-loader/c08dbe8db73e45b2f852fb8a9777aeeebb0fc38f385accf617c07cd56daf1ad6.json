{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcurry/Desktop/WebDev1/Final_Project_May1/TriviaParty/Frontend/src/pages/GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateQuestions = category => {\n  return Array.from({\n    length: 50\n  }, (_, i) => ({\n    id: `${category}-${i}`,\n    question: `Question ${i + 1} for ${category}?`,\n    correct: \"Correct Answer\",\n    choices: shuffle([\"Correct Answer\", \"Wrong Option A\", \"Wrong Option B\", \"Wrong Option C\"])\n  }));\n};\nconst shuffle = array => {\n  const a = [...array];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\nconst GamePage = () => {\n  _s();\n  const {\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const categories = [\"General\", \"History\", \"Science\", \"Pop Culture\"];\n\n  // Change category here to simulate fetching from backend\n  const [selectedCategory] = useState(\"General\");\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  useEffect(() => {\n    const qPool = generateQuestions(selectedCategory);\n    setQuestions(qPool);\n  }, [selectedCategory]);\n  const handleAnswer = answer => {\n    setSelectedAnswer(answer);\n  };\n  const handleNext = () => {\n    setSelectedAnswer(null);\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      navigate('/results');\n    }\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"p-6\",\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 38\n  }, this);\n  const currentQ = questions[currentIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Game #\", gameId, \" \\u2013 \", selectedCategory, \" Category\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg mb-2 font-medium\",\n      children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-6\",\n      children: currentQ.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-3\",\n      children: currentQ.choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(choice),\n        className: `py-2 px-4 rounded border ${selectedAnswer === choice ? choice === currentQ.correct ? \"bg-green-300 border-green-700\" : \"bg-red-300 border-red-700\" : \"bg-white hover:bg-gray-100\"}`,\n        disabled: selectedAnswer !== null,\n        children: choice\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), selectedAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        children: currentIndex + 1 === questions.length ? \"See Results\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"My3/CucJq/DYZXl6fobAzbpT/qg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","generateQuestions","category","Array","from","length","_","i","id","question","correct","choices","shuffle","array","a","j","Math","floor","random","GamePage","_s","gameId","navigate","categories","selectedCategory","questions","setQuestions","currentIndex","setCurrentIndex","selectedAnswer","setSelectedAnswer","qPool","handleAnswer","answer","handleNext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQ","map","choice","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/michaelcurry/Desktop/WebDev1/Final_Project_May1/TriviaParty/Frontend/src/pages/GamePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst generateQuestions = (category) => {\n  return Array.from({ length: 50 }, (_, i) => ({\n    id: `${category}-${i}`,\n    question: `Question ${i + 1} for ${category}?`,\n    correct: \"Correct Answer\",\n    choices: shuffle([\n      \"Correct Answer\",\n      \"Wrong Option A\",\n      \"Wrong Option B\",\n      \"Wrong Option C\"\n    ])\n  }));\n};\n\nconst shuffle = (array) => {\n  const a = [...array];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nconst GamePage = () => {\n  const { gameId } = useParams();\n  const navigate = useNavigate();\n  const categories = [\"General\", \"History\", \"Science\", \"Pop Culture\"];\n\n  // Change category here to simulate fetching from backend\n  const [selectedCategory] = useState(\"General\");\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  useEffect(() => {\n    const qPool = generateQuestions(selectedCategory);\n    setQuestions(qPool);\n  }, [selectedCategory]);\n\n  const handleAnswer = (answer) => {\n    setSelectedAnswer(answer);\n  };\n\n  const handleNext = () => {\n    setSelectedAnswer(null);\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      navigate('/results');\n    }\n  };\n\n  if (questions.length === 0) return <p className=\"p-6\">Loading questions...</p>;\n\n  const currentQ = questions[currentIndex];\n\n  return (\n    <div className=\"p-8 max-w-2xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">\n        Game #{gameId} â€“ {selectedCategory} Category\n      </h1>\n      <h2 className=\"text-lg mb-2 font-medium\">\n        Question {currentIndex + 1} of {questions.length}\n      </h2>\n      <p className=\"mb-6\">{currentQ.question}</p>\n      <div className=\"grid grid-cols-1 gap-3\">\n        {currentQ.choices.map((choice, i) => (\n          <button\n            key={i}\n            onClick={() => handleAnswer(choice)}\n            className={`py-2 px-4 rounded border ${\n              selectedAnswer === choice\n                ? choice === currentQ.correct\n                  ? \"bg-green-300 border-green-700\"\n                  : \"bg-red-300 border-red-700\"\n                : \"bg-white hover:bg-gray-100\"\n            }`}\n            disabled={selectedAnswer !== null}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n      {selectedAnswer && (\n        <div className=\"mt-6 text-center\">\n          <button\n            onClick={handleNext}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            {currentIndex + 1 === questions.length ? \"See Results\" : \"Next Question\"}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}